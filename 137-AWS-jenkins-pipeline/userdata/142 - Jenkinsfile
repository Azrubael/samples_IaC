pipeline {
    // A simple 'pipeline-as-code' jenkins job with MAVEN Checkstyle Analysis
    // and SonarQube integration
    agent any
    environment{
        JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64/"
    }
    stages {
        stage('Fetch code') {
            steps {
                //paac = 'pipeline as a code'
                git branch: 'paac', url: 'https://github.com/devopshydclub/vprofile-project'
            }
        }
        stage('Build'){
            steps {
                sh 'mvn install'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }
        stage('Checkstyle Analysis ') {
            steps {
                sh 'mvn checkstyle:checkstyle'
            }
        }
        stage('Sonar Stage') {
        // SonarQube scans the code
        // and uploads all the reports on SonarQube server
            environment {
                scannerHome = tool 'sonar4.7'
                JAVA_HOME='/usr/lib/jvm/java-8-openjdk-amd64/'
            }
            steps {
                withSonarQubeEnv('sonar') {  // SonarQube server declaration
                    sh '''${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=vprofile \
                    -Dsonar.projectName=vprofile-repo \
                    -Dsonar.projectVersion=1.0 \
                    -Dsonar.sources=src/ \
                    -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ \
                    -Dsonar.junit.reportsPath=target/surefile-reports/ \
                    -Dsonar.jacoco.reportsPath=target/jacoco.exec \
                    -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
                    '''
                }
            }
        }
    }
}
